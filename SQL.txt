



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000	
ii. Business table = 10000	
iii. Category table = 10000	
iv. Checkin table = 10000	
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = id: 10000
ii. Hours = business_id: 1562
iii. Category = business_id: 2643
iv. Attribute = business_id: 1115
v. Review = id: 10000, business_id: 8090, user_id: 9581
vi. Checkin = business_id: 493
vii. Photo = id: 10000, business_id: 6493
viii. Tip = user_id: 537, business_id:3979
ix. User = id: 10000
x. Friend = user_id: 11
xi. Elite_years = user_id: 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer:
	
	
	SQL code used to arrive at answer:
	SELECT COUNT(*)
 	FROM user
	WHERE id IS NULL
	OR name IS NULL
	OR review_count IS NULL
	OR yelping_since IS NULL
	OR useful IS NULL
	OR funny IS NULL
	OR cool IS NULL
	OR fans IS NULL
	OR average_stars IS NULL
	OR compliment_hot IS NULL
	OR compliment_more IS NULL
	OR compliment_profile IS NULL
	OR compliment_cute IS NULL
	OR compliment_list IS NULL
	OR compliment_note IS NULL
	OR compliment_plain IS NULL
	OR compliment_cool IS NULL
	OR compliment_funny IS NULL
	OR compliment_writer IS NULL
	OR compliment_photos IS NULL
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1		max: 5		avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000		avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	SELECT city,SUM(review_count) AS NUM
	FROM business
	GROUP BY city
	ORDER BY NUM DESC
	
	
	Copy and Paste the Result Below:
+-----------------+-------+
| city            |   NUM |
+-----------------+-------+
| Las Vegas       | 82854 |
| Phoenix         | 34503 |
| Toronto         | 24113 |
| Scottsdale      | 20614 |
| Charlotte       | 12523 |
| Henderson       | 10871 |
| Tempe           | 10504 |
| Pittsburgh      |  9798 |
| Montréal        |  9448 |
| Chandler        |  8112 |
| Mesa            |  6875 |
| Gilbert         |  6380 |
| Cleveland       |  5593 |
| Madison         |  5265 |
| Glendale        |  4406 |
| Mississauga     |  3814 |
| Edinburgh       |  2792 |
| Peoria          |  2624 |
| North Las Vegas |  2438 |
| Markham         |  2352 |
| Champaign       |  2029 |
| Stuttgart       |  1849 |
| Surprise        |  1520 |
| Lakewood        |  1465 |
| Goodyear        |  1155 |
+-----------------+-------+

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
SELECT SUM(review_count) AS Rating_Count, stars
FROM business
WHERE city == "Avon"
GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+--------------+-------+
| Rating_Count | stars |
+--------------+-------+
|           10 |   1.5 |
|            6 |   2.5 |
|           88 |   3.5 |
|           21 |   4.0 |
|           31 |   4.5 |
|            3 |   5.0 |
+--------------+-------+

ii. Beachwood

SQL code used to arrive at answer:
SELECT SUM(review_count) AS Rating_Count, stars
FROM business
WHERE city == "Beachwood"
GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+--------------+-------+
| Rating_Count | stars |
+--------------+-------+
|            8 |   2.0 |
|            3 |   2.5 |
|           11 |   3.0 |
|            6 |   3.5 |
|           69 |   4.0 |
|           17 |   4.5 |
|           23 |   5.0 |
+--------------+-------+		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
SELECT review_count, name
FROM user
ORDER BY review_count DESC
LIMIT 3	
		
	Copy and Paste the Result Below:
+--------------+--------+
| review_count | name   |
+--------------+--------+
|         2000 | Gerald |
|         1629 | Sara   |
|         1339 | Yuri   |
+--------------+--------+	


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	Not necessarily. Someone may have a high number review count with a relatively low number of fans, while on the other hand, someone with a low review count may have a higher amount of fans.

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: Yes, reviews with "love" have 1780 reviews while reviews with "hate" only have 232 reviews. 

	
	SQL code used to arrive at answer:
	SELECT COUNT(*)
	FROM review
	WHERE text LIKE “%love%[%hate%]”
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	SELECT name,fans
	FROM user
	ORDER BY fans DESC
	LIMIT 10
	
	Copy and Paste the Result Below:
+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	I have decided to compare shopping stores in the Las Vegas area.
i. Do the two groups you chose to analyze have a different distribution of hours?
	For the most part, no. The exception is that Walgreens, which has a 2.5 star rating, is open until 10:00pm everyday. The other stores are generally open around 8:00am and closed at around 6:00-7:00

ii. Do the two groups you chose to analyze have a different number of reviews?
    They are equally balanced in terms of reviews. Walgreens (2.5 stars) and Wooly Wonders (3.5 stars) have 6 and 11 reviews, respectively.
    On the other hand, Desert Medical Equipment (5.0 stars) and Red Rock Canyon Visitor Center (4.5 stars) have 4 and 32 reviews, respectively.     
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
     It looks like Walgreens and Wooly Wonders, which are part of the 2-3 star category, are in the same vicinity. Judging from this data, shopping stores in this area have lower reviews.
SQL code used for analysis:

SELECT b.name, b.address, c.category, b.stars, b.review_count, h.hours
FROM business b
INNER JOIN category c ON b.id=c.business_id
INNER JOIN hours h on h.business_id=b.id
WHERE c.category = 'Shopping' AND b.city = 'Las Vegas'
GROUP BY h.hours
ORDER BY 1 ASC
		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
    Businesses that are open have a higher average rating than businesses that are closed.     
         
ii. Difference 2:
    Businesses that are open have more reviews than businesses that are closed.      
         
         
SQL code used for analysis:
SELECT AVG(b.stars), SUM(b.review_count), is_open
FROM business b INNER JOIN review r ON b.id = r.id
GROUP BY b.is_open
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
I wanted to catch a glimpse of what kinds of categories are people more likely leave reviews. I also wanted to see if these reviews are positive
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
For this, I will need to group the categories together, the average star rating that corresponds to each category, and the summation of review_count according to each category. This will tell me which category people are more likely to leave reviews as well as which category generally has higher ratings                           
                  
iii. Output of your finished dataset:
+------------------------+---------------+---------------------+
| category               |  AVG(b.stars) | SUM(b.review_count) |
+------------------------+---------------+---------------------+
| Accessories            |           4.0 |                   3 |
| Active Life            |          4.15 |                 131 |
| Acupuncture            |           4.5 |                  16 |
| American (New)         | 3.33333333333 |                 481 |
| American (Traditional) | 3.81818181818 |                1128 |
| Apartments             |           3.5 |                  20 |
| Arabian                |           5.0 |                 267 |
| Arcades                |           4.0 |                 131 |
| Architects             |           4.5 |                 223 |
| Architectural Tours    |           4.5 |                 223 |
| Art Galleries          | 4.33333333333 |                  40 |
| Arts & Crafts          |          4.25 |                  14 |
| Arts & Entertainment   |           4.0 |                 388 |
| Asian Fusion           |           3.5 |                 793 |
| Auto Detailing         |           5.0 |                  61 |
| Auto Repair            |         4.625 |                 122 |
| Automotive             |           4.5 |                 198 |
| Bagels                 |           3.0 |                   8 |
| Bakeries               |           4.1 |                 239 |
| Banks & Credit Unions  |           1.5 |                   3 |
| Barbeque               |          3.75 |                 505 |
| Bars                   |           3.5 |                1322 |
| Beaches                |           3.5 |                  29 |
| Beauty & Spas          | 3.88461538462 |                 119 |
| Beer                   |           4.0 |                 106 |
+------------------------+---------------+---------------------+
         
         
iv. Provide the SQL code you used to create your final dataset:
SELECT  c.category, AVG(b.stars), SUM(b.review_count)
FROM business b
INNER JOIN category c ON b.id=c.business_id
GROUP BY c.category
